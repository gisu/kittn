// ===================================================
// Type Checks
// ===================================================

/**
 * Checks if a Value is included
 *
 * @param  {*}  $value - Included value to check
 *
 * @returns {Bool}
 */
@function is-true($value) {
  @return if($value == null, false, $value and $value != null and $value != "" and $value != ());
}

/**
 * Checks if Value is a map
 *
 * @param  {*}  $value - Included value to check
 *
 * @returns {Bool}
 */
@function is-map($value) {
  @return type-of($value) == "map";
}

/**
 * Checks if Value is a list
 *
 * @param  {*}  $value - Included value to check
 *
 * @returns {Bool}
 */
@function is-list($value) {
  @return type-of($value) == "list";
}

/**
 * Checks if Value is a number
 *
 * @param  {*}  $value - Included value to check
 *
 * @returns {Bool}
 */
@function is-number($value) {
  @return type-of($value) == "number";
}

/**
 * Checks if Value is a string
 *
 * @param  {*}  $value - Included value to check
 *
 * @returns {Bool}
 */
@function is-string($value) {
  @return type-of($value) == "string";
}

/**
 * Checks if Value is not a string
 *
 * @param  {*}  $value - Included value to check
 *
 * @returns {Bool}
 */
@function is-not-string($value) {
  @return type-of($value) != "string";
}

/**
 * Check if the Selector is nested
 *
 * @returns {Bool}
 */
@function is-nested() {
  $p: &;
  $list: ();

  @each $par in $p {
    $list: append($par, $list, comma);
  }

  // Check the length from the selector list
  @if length($list) > 2 {
    @return true;
  } @else {
    @return false;
  }
}

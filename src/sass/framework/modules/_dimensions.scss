// ===================================================
// Dimensions
// ===================================================

/**
 * For include Element Dimensions in Width, Height and Lineheight. When '$size' have only one Value will height and width the same (square)
 *
 * @param  {List}  $size - Width and or Height
 * @param  {Bool}  $lineheight (false) - On 'true' lineheight will be set to the same $size, otherwise use a Number
 */
@mixin size($size, $lineheight: false) {
  @if length($size) <= 2 {
    @if length($size) == 2 {
      width: if(unitless(nth($size,1)),nth($size,1) + 0px, nth($size,1));
      height: if(unitless(nth($size,2)),nth($size,2) + 0px, nth($size,2));

      @if $lineheight {
        @if is-number($lineheight) {
          line-height: if(unitless($lineheight), $lineheight + 0px, $lineheight);

        } @else {
          line-height: if(unitless(nth($size,2)),nth($size,2) + 0px, nth($size,2));
        }
      }
    }

    @if length($size) == 1 {
      width: if(unitless($size),$size + 0px, $size);
      height: if(unitless($size),$size + 0px, $size);

      @if $lineheight {
        @if is-number($lineheight) {
          line-height: if(unitless($lineheight), $lineheight + 0px, $lineheight);

        } @else {
          line-height: if(unitless($size),$size + 0px, $size);
        }
      }
    }

  } @else {
    @warn 'Too many Size Values. Maximum two values';
  }
}

/**
 * Mixin to Insert Height and Lineheight on a Simple Way
 *
 * @param  {Number}  $height - Heightvalue
 * @param  {Number}  $factor - The multiply factor
 */
@mixin align-height($height, $factor: 1) {
  height: if(unitless($height), $height + 1px, $height);
  line-height: if(unitless($height), $height + 1px, $height) * strip-units($factor);
}

/**
 * Mixin to Insert Height and Lineheight on a Simple Way
 *
 * @param  {Number}  $size - Fontsize
 * @param  {Number}  $factor - The multiply factor
 */
@mixin align-fontsize($size,$factor: 1) {
  font-size: if(unitless($size), $size + 1px, $size);
  line-height: if(unitless($size), $size + 1px, $size) * strip-units($factor);
}

/**
 * Center and Middle a Element in a box
 *
 * @param  {number}  $size - Width and or Height
 */
@mixin center($size) {
  @include size($size, $size);
  text-align: center;
}

/**
 * Build a perfect Circle
 *
 * @param  {value}  $size - The Size of the Circle
 */
@mixin perfect-circle($size) {
  @include central($size);
  border-radius: if(unitless($size), $size + 0px, $size);
}

/**
 * A Floating Grid System
 *
 * @param  {list}    $ratio (1)        - The Ratio between width and height
 * @param  {string}  $selector (false) - Target selector
 */
@mixin ratio($ratio: 1, $selector: false) {

  $sel: null;
  $rat1: null;
  $rat2: null;

  @if length($ratio) == 2 {
    $rat1: strip-units(nth($ratio,1));
    $rat2: strip-units(nth($ratio,2));

  } @else {
    $rat1: strip-units($ratio);
    $rat2: strip-units($ratio);
  }

  overflow: hidden;
  position: relative;

  &:before {
    content: '';
    display: block;
    height: 0;
    padding-top: ($rat2 / $rat1) * 100%;
  }

  @if $selector != false {
    $sel: '& > #{$selector}';
  } @else {
    $sel: '& > *';
  }

  #{$sel} {
    position: absolute;
    left: 0;
    top: 0;
    height: 100%;
    width: 100%;
    @content;
  }
}

/**
 * Remove Ratio Values
 *
 * @param  {string}  $selector (false) - Target selector
 */
@mixin unratio($selector: false) {
  $sel: null;

  &:before {
    height: auto;
    padding-top: 0;
  }

  @if $selector != false {
    $sel: '& > #{$selector}';
  } @else {
    $sel: '& > *';
  }

  #{$sel} {
    position: inherit;
    left: inherit;
    top: inherit;
    height: inherit;
    width: inherit;
    @content;
  }
}

/**
 * Span a Element in the Height and Width absolute positioned
 */
@mixin tighten-up {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

/**
 * Put Text Elements in the Middle
 */
@mixin text-middle {
  &:before {
    content: '';
    display: inline-block;
    height: 100%;
    vertical-align: middle;
  }

  > * {
    display: inline-block;
    vertical-align: middle;
  }
}

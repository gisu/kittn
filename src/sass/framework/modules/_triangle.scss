// ===================================================
// Triangle Builder
// ===================================================

@mixin triangle($values: ()) {

  // Default Container Setup
  $values: map-merge((
    color: #fff,
    width: 15px,
    height: 15px,
    angle: 'left'
  ), $values);

  // Angle Map
  $angle-map: (
    'top': 0,
    'top right': 315,
    'right': 90,
    'bottom right': 45,
    'bottom': 180,
    'bottom left': 135,
    'left': 270,
    'top left': 225,
  );

  $angle: null;

  // Check the Datatype from '$angle'
  // When is number than free
  @if type-of(map-get($values,angle)) == "number" {
    // Strip Units and Clamp the Value
    $angle: strip-units(clamp(map-get($values,angle), 0, 360));

  } @else {
    // When the datatype is a 'string' use the map
    @if map-has-key($values,angle) {
      $angle : map-get($angle-map,map-get($values,angle));
    } @else {
      @warn "The desired Angle is not available in the Map";
    }
  }

  // Prepare Height and Width Values
  @if unit(map-get($values,height)) == "" or unit(map-get($values,height)) == "%" {
    @warn "The Unit for 'height' is not possible.";
  }

  @if unit(map-get($values,width)) == "" or unit(map-get($values,width)) == "%" {
    @warn "The Unit for 'width' is not possible.";
  }

  // offset 45deg to make each side start at 0
  $deg: $angle + 45;

  // if units, remove units
  @if unit($deg) == deg {
    $deg: $deg / 1deg;
  }

  // shift to be on a scale from 0 to 90.
  @while $deg > 90 {
    $deg: $deg - 90;
  }

  @while $deg < 0 {
    $deg: $deg + 90;
  }

  // Get a ratio of 90 to multiply by.
  $deg: $deg / 90;

  // make sure metrics are reset
  display: block;
  width: 0;
  height: 0;
  border: 0 solid transparent;

  // run through sides
  @if $angle <= 45 or $angle > 315 {
    border-bottom-color: map-get($values,color);
    border-width: 0 (map-get($values,width) * abs($deg - 1)) map-get($values,height) (map-get($values,width) * $deg);
  }
  @if $angle > 45 and $angle <= 135 {
    border-left-color: map-get($values,color);
    border-width: (map-get($values,height) * $deg) 0 (map-get($values,height) * abs($deg - 1)) map-get($values,width);
  }
  @if $angle > 135 and $angle <= 225 {
    border-top-color: map-get($values,color);
    border-width: map-get($values,height) (map-get($values,width) * $deg) 0 (map-get($values,width) * abs($deg - 1));
  }
  @if $angle > 225 and $angle <= 315 {
    border-right-color: map-get($values,color);
    border-width: (map-get($values,height) * abs($deg - 1)) map-get($values,width) (map-get($values,height) * $deg) 0;
  }
}
